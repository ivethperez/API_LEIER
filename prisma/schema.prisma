generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Almacenes {
  Id                                                    Int          @id @default(autoincrement()) @db.SmallInt
  Code                                                  String       @db.VarChar(50)
  Nombre                                                String       @db.VarChar(250)
  Existencia_bolsas                                     Int
  Existencia_kg                                         Int
  CreadoFecha                                           DateTime     @db.DateTime(0)
  UsuarioId                                             Int          @db.SmallInt
  FechaModificacion                                     DateTime?    @db.DateTime(0)
  ModificadoPor                                         Int?         @db.SmallInt
  Usuarios_Almacenes_UsuarioIdToUsuarios                Usuarios     @relation("Almacenes_UsuarioIdToUsuarios", fields: [UsuarioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "Almacenes_ibfk_1")
  Usuarios_Almacenes_ModificadoPorToUsuarios            Usuarios?    @relation("Almacenes_ModificadoPorToUsuarios", fields: [ModificadoPor], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "Almacenes_ibfk_2")
  Inventario_Inventario_AlmacenActualIdToAlmacenes      Inventario[] @relation("Inventario_AlmacenActualIdToAlmacenes")
  Inventario_Inventario_SurtidoPorAlmacenIdToAlmacenes  Inventario[] @relation("Inventario_SurtidoPorAlmacenIdToAlmacenes")
  Inventario_Inventario_RecibidoPorAlmacenIdToAlmacenes Inventario[] @relation("Inventario_RecibidoPorAlmacenIdToAlmacenes")

  @@index([UsuarioId], map: "CreadoPor")
  @@index([ModificadoPor], map: "ModificadoPor")
}

model CategoriasProducto {
  Id        Int         @id @default(autoincrement()) @db.SmallInt
  Code      String      @db.VarChar(50)
  Nombre    String      @db.VarChar(250)
  Productos Productos[]
}

model Clientes {
  Id       Int      @id @default(autoincrement()) @db.SmallInt
  Nombre   String   @db.VarChar(250)
  Telefono String?  @db.VarChar(250)
  Ventas   Ventas[]
}

model Compras {
  Id               Int          @id @default(autoincrement()) @db.SmallInt
  Folio            String       @db.VarChar(250)
  TipoCompraId     Int          @db.SmallInt
  ProveedorId      Int          @db.SmallInt
  ProductoId       Int?         @db.SmallInt
  InsumoId         Int?         @db.SmallInt
  Cantidad         Int
  CantidadRecibida Int
  CostoUnitario    Decimal      @db.Decimal(10, 0)
  PrecioUnitario   Decimal      @db.Decimal(10, 0)
  FechaRecepcion   DateTime     @db.DateTime(0)
  CreadoFecha      DateTime     @db.DateTime(0)
  TiposCompra      TiposCompra  @relation(fields: [TipoCompraId], references: [Id], onUpdate: Restrict, map: "Compras_ibfk_1")
  Proveedores      Proveedores  @relation(fields: [ProveedorId], references: [Id], onUpdate: Restrict, map: "Compras_ibfk_2")
  Productos        Productos?   @relation(fields: [ProductoId], references: [Id], onDelete: Restrict, onUpdate: Restrict, map: "Compras_ibfk_3")
  Insumos          Insumos?     @relation(fields: [InsumoId], references: [Id], onDelete: Restrict, onUpdate: Restrict, map: "Compras_ibfk_4")
  Inventario       Inventario[]

  @@index([InsumoId], map: "InsumoId")
  @@index([ProductoId], map: "ProductoId")
  @@index([ProveedorId], map: "ProveedorId")
  @@index([TipoCompraId], map: "TipoCompraId")
}

model ImagenesProductos {
  Id         Int       @id @default(autoincrement()) @db.SmallInt
  URLImagen  String?   @db.VarChar(500)
  Orden      Int?      @db.SmallInt
  ProductoId Int       @db.SmallInt
  Productos  Productos @relation(fields: [ProductoId], references: [Id], onUpdate: Restrict, map: "ImagenesProductos_ibfk_1")

  @@index([ProductoId], map: "ProductoId")
}

model Insumos {
  Id               Int       @id @default(autoincrement()) @db.SmallInt
  Nombre           String    @db.VarChar(250)
  Descripcion      String?   @db.VarChar(500)
  Cantidad         Int
  CantidadRecibida Int?
  CostoUnitario    Decimal   @db.Decimal(10, 4)
  Compras          Compras[]
}

model Inventario {
  Id                                                   Int       @id @default(autoincrement()) @db.SmallInt
  CompraId                                             Int       @db.SmallInt
  ProductoId                                           Int       @db.SmallInt
  CantidadRecibida                                     Int       @db.SmallInt
  AlmacenActualId                                      Int       @db.SmallInt
  FechaSurtido                                         DateTime  @db.DateTime(0)
  SurtidoPorAlmacenId                                  Int       @db.SmallInt
  RecibidoPorAlmacenId                                 Int       @db.SmallInt
  CreadoFecha                                          DateTime  @db.DateTime(0)
  CreadoPor                                            Int       @db.SmallInt
  Compras                                              Compras   @relation(fields: [CompraId], references: [Id], onUpdate: Restrict, map: "Inventario_ibfk_1")
  Productos                                            Productos @relation(fields: [ProductoId], references: [Id], onUpdate: Restrict, map: "Inventario_ibfk_2")
  Almacenes_Inventario_AlmacenActualIdToAlmacenes      Almacenes @relation("Inventario_AlmacenActualIdToAlmacenes", fields: [AlmacenActualId], references: [Id], onUpdate: Restrict, map: "Inventario_ibfk_3")
  Almacenes_Inventario_SurtidoPorAlmacenIdToAlmacenes  Almacenes @relation("Inventario_SurtidoPorAlmacenIdToAlmacenes", fields: [SurtidoPorAlmacenId], references: [Id], onUpdate: Restrict, map: "Inventario_ibfk_4")
  Almacenes_Inventario_RecibidoPorAlmacenIdToAlmacenes Almacenes @relation("Inventario_RecibidoPorAlmacenIdToAlmacenes", fields: [RecibidoPorAlmacenId], references: [Id], onUpdate: Restrict, map: "Inventario_ibfk_5")
  Usuarios                                             Usuarios  @relation(fields: [CreadoPor], references: [Id], onUpdate: Restrict, map: "Inventario_ibfk_6")

  @@index([AlmacenActualId], map: "AlmacenActualId")
  @@index([CompraId], map: "CompraId")
  @@index([CreadoPor], map: "CreadoPor")
  @@index([ProductoId], map: "ProductoId")
  @@index([RecibidoPorAlmacenId], map: "RecibidoPorAlmacenId")
  @@index([SurtidoPorAlmacenId], map: "SurtidoPorAlmacenId")
}

model ListasPrecios {
  Id             Int            @id @default(autoincrement()) @db.SmallInt
  ProductoId     Int            @db.SmallInt
  UnidadMedidaId Int            @db.SmallInt
  CostoUnitario  Decimal        @db.Decimal(10, 0)
  Utilidad       Decimal        @db.Decimal(10, 0)
  PrecioUnitario Decimal        @db.Decimal(10, 0)
  CreadoFecha    DateTime       @db.DateTime(0)
  Vigente        Boolean        @default(dbgenerated("(b'0')")) @db.Bit(1)
  Productos      Productos      @relation(fields: [ProductoId], references: [Id], onUpdate: Restrict, map: "ListasPrecios_ibfk_1")
  UnidadesMedida UnidadesMedida @relation(fields: [UnidadMedidaId], references: [Id], onUpdate: Restrict, map: "ListasPrecios_ibfk_2")

  @@index([ProductoId], map: "ProductoId")
  @@index([UnidadMedidaId], map: "UnidadMedidaId")
}

model MetodosPago {
  Id     Int      @id @default(autoincrement()) @db.SmallInt
  code   String   @db.VarChar(50)
  Nombre String   @db.VarChar(250)
  Ventas Ventas[]
}

model PreciosProducto {
  Id                                                     Int             @id @default(autoincrement()) @db.SmallInt
  UnidadMedidaId                                         Int?            @db.SmallInt
  Cantidad                                               Int             @default(0) @db.SmallInt
  PrecioUnitario                                         Decimal         @default(0.00) @db.Decimal(18, 2)
  ProductoId                                             Int             @db.SmallInt
  CreadoFecha                                            DateTime        @db.DateTime(0)
  CreadoUsuarioId                                        Int             @db.SmallInt
  ModificadoFecha                                        DateTime?       @db.DateTime(0)
  ModificadoUsuarioId                                    Int?            @db.SmallInt
  Productos                                              Productos       @relation(fields: [ProductoId], references: [Id], onUpdate: Restrict, map: "PreciosProducto_ibfk_1")
  Usuarios_PreciosProducto_CreadoUsuarioIdToUsuarios     Usuarios        @relation("PreciosProducto_CreadoUsuarioIdToUsuarios", fields: [CreadoUsuarioId], references: [Id], onUpdate: Restrict, map: "PreciosProducto_ibfk_3")
  Usuarios_PreciosProducto_ModificadoUsuarioIdToUsuarios Usuarios?       @relation("PreciosProducto_ModificadoUsuarioIdToUsuarios", fields: [ModificadoUsuarioId], references: [Id], onDelete: Restrict, onUpdate: Restrict, map: "PreciosProducto_ibfk_4")
  UnidadesMedida                                         UnidadesMedida? @relation(fields: [UnidadMedidaId], references: [Id], onDelete: Restrict, onUpdate: Restrict, map: "PreciosProducto_ibfk_5")

  @@index([CreadoUsuarioId], map: "CreadoUsuarioId")
  @@index([ModificadoUsuarioId], map: "ModificadoUsuarioId")
  @@index([UnidadMedidaId], map: "PreciosProducto_ibfk_5")
  @@index([ProductoId], map: "ProductoId")
}

model Productos {
  Id                 Int                 @id @default(autoincrement()) @db.SmallInt
  Nombre             String              @db.VarChar(250)
  Descripcion        String?             @db.VarChar(500)
  Cantidad           Int
  EsPieza            Boolean             @default(dbgenerated("(b'0')")) @db.Bit(1)
  CategoriaId        Int                 @db.SmallInt
  CreadoFecha        DateTime            @db.DateTime(0)
  UsuarioId          Int?                @db.SmallInt
  Compras            Compras[]
  ImagenesProductos  ImagenesProductos[]
  Inventario         Inventario[]
  ListasPrecios      ListasPrecios[]
  PreciosProducto    PreciosProducto[]
  CategoriasProducto CategoriasProducto  @relation(fields: [CategoriaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "Productos_ibfk_1")
  Usuarios           Usuarios?           @relation(fields: [UsuarioId], references: [Id], onDelete: Restrict, onUpdate: Restrict, map: "Productos_ibfk_2")
  Ventas             Ventas[]
  Activo             Boolean             @default(dbgenerated("(b'0')")) @db.Bit(1)

  @@index([CategoriaId], map: "CategoriaId")
  @@index([UsuarioId], map: "UsuarioId")
}

model Proveedores {
  Id      Int       @id @default(autoincrement()) @db.SmallInt
  Nombre  String    @db.VarChar(500)
  Compras Compras[]
}

model RolesUSuario {
  Id       Int        @id @default(autoincrement()) @db.SmallInt
  Nombre   String     @db.VarChar(500)
  Usuarios Usuarios[]
}

model TiposCompra {
  Id      Int       @id @default(autoincrement()) @db.SmallInt
  Code    String    @db.VarChar(250)
  Nombre  String    @db.VarChar(250)
  Compras Compras[]
}

model UnidadesMedida {
  Id              Int               @id @default(autoincrement()) @db.SmallInt
  Code            String            @db.VarChar(250)
  Nombre          String?           @db.VarChar(500)
  ListasPrecios   ListasPrecios[]
  PreciosProducto PreciosProducto[]
}

model Usuarios {
  Id                                                            Int               @id @default(autoincrement()) @db.SmallInt
  Nombre                                                        String            @db.VarChar(250)
  RoleId                                                        Int?              @db.SmallInt
  UsuariosLeier                                                 Boolean?          @default(dbgenerated("(b'0')")) @db.Bit(1)
  Contrase_a                                                    String?           @map("Contraseña") @db.VarChar(500)
  CreadoFecha                                                   DateTime          @db.DateTime(0)
  Telefono                                                      String?           @db.VarChar(20)
  Almacenes_Almacenes_UsuarioIdToUsuarios                       Almacenes[]       @relation("Almacenes_UsuarioIdToUsuarios")
  Almacenes_Almacenes_ModificadoPorToUsuarios                   Almacenes[]       @relation("Almacenes_ModificadoPorToUsuarios")
  Inventario                                                    Inventario[]
  PreciosProducto_PreciosProducto_CreadoUsuarioIdToUsuarios     PreciosProducto[] @relation("PreciosProducto_CreadoUsuarioIdToUsuarios")
  PreciosProducto_PreciosProducto_ModificadoUsuarioIdToUsuarios PreciosProducto[] @relation("PreciosProducto_ModificadoUsuarioIdToUsuarios")
  Productos                                                     Productos[]
  RolesUSuario                                                  RolesUSuario?     @relation(fields: [RoleId], references: [Id], onDelete: Restrict, onUpdate: Restrict, map: "Usuarios_ibfk_1")
  Correo                                                        String?           @db.VarChar(250)

  @@index([RoleId], map: "RoleId")
}

model Ventas {
  Id            Int         @id @default(autoincrement()) @db.SmallInt
  Folio         String      @db.VarChar(250)
  ProductoId    Int         @db.SmallInt
  Cantidad      Int
  ClienteId     Int?        @db.SmallInt
  MetodoPagoId  Int         @db.SmallInt
  Pagado        Boolean     @default(dbgenerated("(b'0')")) @db.Bit(1)
  FechaPago     DateTime?   @db.DateTime(0)
  Observaciones String?     @db.VarChar(500)
  CreadoFecha   DateTime    @db.DateTime(0)
  Productos     Productos   @relation(fields: [ProductoId], references: [Id], onUpdate: Restrict, map: "Ventas_ibfk_1")
  Clientes      Clientes?   @relation(fields: [ClienteId], references: [Id], onDelete: Restrict, onUpdate: Restrict, map: "Ventas_ibfk_2")
  MetodosPago   MetodosPago @relation(fields: [MetodoPagoId], references: [Id], onUpdate: Restrict, map: "Ventas_ibfk_3")

  @@index([ClienteId], map: "ClienteId")
  @@index([MetodoPagoId], map: "MetodoPagoId")
  @@index([ProductoId], map: "ProductoId")
}
